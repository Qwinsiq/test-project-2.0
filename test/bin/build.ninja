# This is the build file for project "test"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule cpp_COMPILER
 command = c++ $ARGS -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C++ object $out

# Rules for linking.

rule STATIC_LINKER
 command = rm -f $out && gcc-ar $LINK_ARGS $out $in
 description = Linking static target $out

rule cpp_LINKER
 command = c++ $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/local/bin/meson --internal regenerate /home/qwinsiq/Desktop/test_project/test /home/qwinsiq/Desktop/test_project/test/bin --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build MobileClient/eaac78d@@stc@sta/source_NetConfAgent.cpp.o: cpp_COMPILER ../MobileClient/./source/NetConfAgent.cpp
 DEPFILE = MobileClient/eaac78d@@stc@sta/source_NetConfAgent.cpp.o.d
 ARGS = -IMobileClient/eaac78d@@stc@sta -IMobileClient -I../MobileClient -I../MobileClient/include -I../MobileClient/source -I../MobileClient/api -fdiagnostics-color=always --coverage -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++2a -g -fPIC

build MobileClient/eaac78d@@stc@sta/source_MobileClient.cpp.o: cpp_COMPILER ../MobileClient/./source/MobileClient.cpp
 DEPFILE = MobileClient/eaac78d@@stc@sta/source_MobileClient.cpp.o.d
 ARGS = -IMobileClient/eaac78d@@stc@sta -IMobileClient -I../MobileClient -I../MobileClient/include -I../MobileClient/source -I../MobileClient/api -fdiagnostics-color=always --coverage -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++2a -g -fPIC

build MobileClient/libstc.a: STATIC_LINKER MobileClient/eaac78d@@stc@sta/source_NetConfAgent.cpp.o MobileClient/eaac78d@@stc@sta/source_MobileClient.cpp.o
 LINK_ARGS = csrD

build main_exe@exe/main.cpp.o: cpp_COMPILER ../main.cpp
 DEPFILE = main_exe@exe/main.cpp.o.d
 ARGS = -Imain_exe@exe -I. -I.. -I../MobileClient/include -I../MobileClient/source -I../MobileClient/api -fdiagnostics-color=always --coverage -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++2a -g

build main_exe: cpp_LINKER main_exe@exe/main.cpp.o | /usr/lib/gcc/x86_64-linux-gnu/10/../../../../lib/libsysrepo-cpp.so /usr/lib/gcc/x86_64-linux-gnu/10/../../../../lib/libyang-cpp.so MobileClient/libstc.a
 LINK_ARGS = --coverage -Wl,--as-needed -Wl,--no-undefined -Wl,--start-group MobileClient/libstc.a /usr/lib/gcc/x86_64-linux-gnu/10/../../../../lib/libsysrepo-cpp.so /usr/lib/gcc/x86_64-linux-gnu/10/../../../../lib/libyang-cpp.so -Wl,--end-group '-Wl,-rpath,$$ORIGIN/MobileClient' -Wl,-rpath-link,/home/qwinsiq/Desktop/test_project/test/bin/MobileClient

build Test/532eaab@@test1@exe/source_MobileClientTest.cpp.o: cpp_COMPILER ../Test/./source/MobileClientTest.cpp
 DEPFILE = Test/532eaab@@test1@exe/source_MobileClientTest.cpp.o.d
 ARGS = -ITest/532eaab@@test1@exe -ITest -I../Test -I../MobileClient/include -I../MobileClient/source -I../MobileClient/api -I../Test/Mock -I/usr/local/include -fdiagnostics-color=always --coverage -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++2a -g -DGTEST_HAS_PTHREAD=1

build Test/test1: cpp_LINKER Test/532eaab@@test1@exe/source_MobileClientTest.cpp.o | /usr/lib/x86_64-linux-gnu/libpthread.a /usr/lib/x86_64-linux-gnu/libpthread.so /usr/local/lib/libgtest_main.a /usr/local/lib/libgtest.a /usr/local/lib/libgmock_main.a /usr/local/lib/libgmock.a /usr/lib/gcc/x86_64-linux-gnu/10/../../../../lib/libsysrepo-cpp.so /usr/lib/gcc/x86_64-linux-gnu/10/../../../../lib/libyang-cpp.so MobileClient/libstc.a
 LINK_ARGS = --coverage -Wl,--as-needed -Wl,--no-undefined -Wl,--start-group MobileClient/libstc.a /usr/local/lib/libgtest_main.a -lpthread /usr/local/lib/libgtest.a /usr/local/lib/libgmock_main.a /usr/local/lib/libgmock.a /usr/lib/gcc/x86_64-linux-gnu/10/../../../../lib/libsysrepo-cpp.so /usr/lib/gcc/x86_64-linux-gnu/10/../../../../lib/libyang-cpp.so -Wl,--end-group '-Wl,-rpath,$$ORIGIN/../MobileClient' -Wl,-rpath-link,/home/qwinsiq/Desktop/test_project/test/bin/MobileClient

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/local/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/local/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/local/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/local/bin/meson dist
 pool = console

build dist: phony meson-dist

# Coverage rules

build meson-coverage: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/bin/meson --internal coverage /home/qwinsiq/Desktop/test_project/test /home/qwinsiq/Desktop/test_project/test/subprojects /home/qwinsiq/Desktop/test_project/test/bin /home/qwinsiq/Desktop/test_project/test/bin/meson-logs
 description = Generates$ coverage$ reports

build coverage: phony meson-coverage

build meson-coverage-xml: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/bin/meson --internal coverage --xml /home/qwinsiq/Desktop/test_project/test /home/qwinsiq/Desktop/test_project/test/subprojects /home/qwinsiq/Desktop/test_project/test/bin /home/qwinsiq/Desktop/test_project/test/bin/meson-logs
 description = Generates$ XML$ coverage$ report

build coverage-xml: phony meson-coverage-xml

build meson-coverage-text: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/bin/meson --internal coverage --text /home/qwinsiq/Desktop/test_project/test /home/qwinsiq/Desktop/test_project/test/subprojects /home/qwinsiq/Desktop/test_project/test/bin /home/qwinsiq/Desktop/test_project/test/bin/meson-logs
 description = Generates$ text$ coverage$ report

build coverage-text: phony meson-coverage-text

build meson-coverage-html: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/bin/meson --internal coverage --html /home/qwinsiq/Desktop/test_project/test /home/qwinsiq/Desktop/test_project/test/subprojects /home/qwinsiq/Desktop/test_project/test/bin /home/qwinsiq/Desktop/test_project/test/bin/meson-logs
 description = Generates$ HTML$ coverage$ report

build coverage-html: phony meson-coverage-html

# Suffix

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony MobileClient/libstc.a main_exe Test/test1

build clean: phony meson-clean

build meson-clean-gcno: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/python3 /usr/local/lib/python3.6/dist-packages/mesonbuild/scripts/delwithsuffix.py . gcno
 description = Deleting$ gcno$ files

build clean-gcno: phony meson-clean-gcno

build meson-clean-gcda: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/python3 /usr/local/lib/python3.6/dist-packages/mesonbuild/scripts/delwithsuffix.py . gcda
 description = Deleting$ gcda$ files

build clean-gcda: phony meson-clean-gcda

build meson-clean: CUSTOM_COMMAND PHONY | clean-gcda clean-gcno
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build ../MobileClient/meson.build ../Test/meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build ../MobileClient/meson.build ../Test/meson.build meson-private/coredata.dat: phony 

default all

